name: Build & Deploy mydemo
env:
  REPO_SSH: git@github.com:ayoub60/my-demo-helm.git

on:
  push:
    branches:
      - main  # ou master selon ton dépôt

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU for arm64 build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR with Maven
        run: |
          mvn clean package -DskipTests
          ls -l target/*.jar

      - name: Vérification du contexte de build
        run: |
          echo "Contenu du dossier courant (contexte de build):"
          ls -la
          echo "Contenu de target/ :"
          ls -la target/  
      
      - name: Extract Maven version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV      

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/mydemo:${{ env.VERSION }} \
            --push .

      - name: Install yq
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CI_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts      
      
      - name: Clone Helm repo via SSH
        env:
          VERSION: ${{ env.VERSION }}      
        run: |
          git clone $REPO_SSH
          cd my-demo-helm
          yq -i '.image.tag = strenv(VERSION)' values.yaml
          git config user.name "github-actions"
          git config user.email "ci@github"
          git commit -am "chore(helm): bump image tag to $VERSION"
          git push origin main